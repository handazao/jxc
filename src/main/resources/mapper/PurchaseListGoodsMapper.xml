<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wangjiangfei.dao.PurchaseListGoodsDao">

    <resultMap id="BaseResultMap" type="com.wangjiangfei.entity.PurchaseList">
        <result column="purchase_list_id" property="purchaseListId" jdbcType="INTEGER" />
        <result column="purchase_number" property="purchaseNumber" jdbcType="VARCHAR" />
        <result column="amount_paid" property="amountPaid" jdbcType="DECIMAL" />
        <result column="amount_payable" property="amountPayable" jdbcType="DECIMAL" />
        <result column="purchase_date" property="purchaseDate" jdbcType="VARCHAR" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
        <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="BaseResultMap02" type="com.wangjiangfei.entity.PurchaseListGoods">
        <result column="purchase_list_goods_id" property="purchaseListGoodsId" jdbcType="INTEGER" />
        <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
        <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
        <result column="goods_model" property="goodsModel" jdbcType="VARCHAR" />
        <result column="goods_unit" property="goodsUnit" jdbcType="VARCHAR" />
        <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="total" property="total" jdbcType="DECIMAL" />
        <result column="purchase_list_id" property="purchaseListId" jdbcType="INTEGER" />
        <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
        <result column="season" property="season" jdbcType="VARCHAR"/>
        <result column="goods_colour" property="goodsColour" jdbcType="VARCHAR"/>
        <result column="goods_size" property="goodsSize" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="savePurchaseList" useGeneratedKeys="true" keyProperty="purchaseListId" parameterType="com.wangjiangfei.entity.PurchaseList">
        INSERT INTO t_purchase_list
        (
        purchase_number, amount_paid, amount_payable, purchase_date,
        remarks, state, supplier_id, user_id, type
        )
        VALUES
        (
        #{purchaseNumber}, #{amountPaid}, #{amountPayable}, #{purchaseDate},
        #{remarks}, #{state}, #{supplierId}, #{userId}, #{type}
        )
    </insert>

    <insert id="savePurchaseListGoods" useGeneratedKeys="true" keyProperty="purchaseListGoodsId" parameterType="com.wangjiangfei.entity.PurchaseListGoods">
        INSERT INTO t_purchase_list_goods
        (
        goods_id, goods_code, goods_name, goods_model, goods_unit,
        goods_num, price, total, purchase_list_id, goods_type_id
        )
        VALUES
        (
        #{goodsId}, #{goodsCode}, #{goodsName}, #{goodsModel}, #{goodsUnit},
        #{goodsNum}, #{price}, #{total}, #{purchaseListId}, #{goodsTypeId}
        )
    </insert>

    <select id="getPurchaselist" resultMap="BaseResultMap">
        SELECT
            t_purchase_list.purchase_list_id,
            t_purchase_list.purchase_number,
            t_purchase_list.amount_paid,
            t_purchase_list.amount_payable,
            t_purchase_list.purchase_date,
            t_purchase_list.remarks,
            t_purchase_list.state,
            t_purchase_list.supplier_id,
            t_purchase_list.user_id,
            t_supplier.supplier_name,
            t_user.true_name
        FROM
            t_purchase_list
        LEFT JOIN t_supplier ON t_purchase_list.supplier_id = t_supplier.supplier_id
        LEFT JOIN t_user ON t_purchase_list.user_id = t_user.user_id
        <where>
            <if test="purchaseNumber != null and purchaseNumber != ''">
                AND t_purchase_list.purchase_number LIKE CONCAT('%', #{purchaseNumber} ,'%')
            </if>
            <if test="supplierId != null">
                AND t_purchase_list.supplier_id = #{supplierId}
            </if>
            <if test="state != null">
                AND t_purchase_list.state = #{state}
            </if>
            <if test="sTime != null and sTime != ''">
                AND t_purchase_list.purchase_date &gt;= #{sTime}
            </if>
            <if test="eTime != null and eTime != ''">
                AND t_purchase_list.purchase_date &lt;= #{eTime}
            </if>
            <if test="purchaseNumberList != null and purchaseNumberList.size() != 0">
                AND t_purchase_list.purchase_number in
                <foreach collection="purchaseNumberList" item="purchaseNumber" open="(" separator="," close=")">
                    #{purchaseNumber}
                </foreach>
            </if>
            <if test="type != null">
                AND t_purchase_list.type = #{type}
            </if>
        </where>
    </select>

    <select id="getPurchaseListGoodsByPurchaseListId" resultMap="BaseResultMap02">
        SELECT
            t_purchase_list_goods.purchase_list_goods_id,
            t_purchase_list_goods.goods_id,
            t_purchase_list_goods.goods_code,
            t_purchase_list_goods.goods_name,
            t_purchase_list_goods.goods_model,
            t_purchase_list_goods.goods_unit,
            t_purchase_list_goods.goods_num,
            t_purchase_list_goods.price,
            t_purchase_list_goods.total,
            t_purchase_list_goods.purchase_list_id,
            t_purchase_list_goods.goods_type_id,
            t_goods.goods_colour,
            t_goods.goods_size,
            t_goods.season
        FROM
            t_purchase_list_goods
                LEFT JOIN t_goods ON t_goods.goods_id = t_purchase_list_goods.goods_id
        WHERE
            purchase_list_id = #{purchaseListId}
    </select>

    <select id="getPurchaseListById" resultMap="BaseResultMap">
        SELECT
            t_purchase_list.purchase_list_id,
            t_purchase_list.purchase_number,
            t_purchase_list.amount_paid,
            t_purchase_list.amount_payable,
            t_purchase_list.purchase_date,
            t_purchase_list.remarks,
            t_purchase_list.state,
            t_purchase_list.supplier_id,
            t_purchase_list.user_id
        FROM
            t_purchase_list
        WHERE
            purchase_list_id = #{purchaseListId}
    </select>

    <delete id="deletePurchaseListById" parameterType="java.lang.Integer">
        DELETE FROM
        t_purchase_list
        WHERE purchase_list_id = #{purchaseListId}
    </delete>

    <delete id="deletePurchaseListGoodsByPurchaseListId" parameterType="java.lang.Integer">
        DELETE FROM
        t_purchase_list_goods
        WHERE purchase_list_id = #{purchaseListId}
    </delete>

    <update id="updateState" parameterType="java.lang.Integer">
        UPDATE t_purchase_list
        SET state = 1
        WHERE purchase_list_id = #{purchaseListId}
    </update>

    <update id="updatePurchaseListId">
        update t_purchase_list_goods
        set purchase_list_id = #{purchaseListId}
        where purchase_list_id = #{purchaseNumber}
    </update>

    <update id="updatePurchaseList">
        UPDATE t_purchase_list
        <set>
            <if test="purchaseNumber != null">
                purchase_number = #{purchaseNumber},
            </if>
            <if test="amountPaid != null">
                amount_paid = #{amountPaid},
            </if>
            <if test="amountPayable != null">
                amount_payable = #{amountPayable},
            </if>
            <if test="purchaseDate != null">
                purchase_date = #{purchaseDate},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
        </set>
        WHERE purchase_list_id = #{purchaseListId}
    </update>

    <select id="getPurchaseListGoods" resultMap="BaseResultMap02">
        SELECT
            t_purchase_list_goods.purchase_list_goods_id,
            t_purchase_list_goods.goods_id,
            t_purchase_list_goods.goods_code,
            t_purchase_list_goods.goods_name,
            t_purchase_list_goods.goods_model,
            t_purchase_list_goods.goods_unit,
            t_purchase_list_goods.goods_num,
            t_purchase_list_goods.price,
            t_purchase_list_goods.total,
            t_purchase_list_goods.purchase_list_id,
            t_purchase_list_goods.goods_type_id,
            t_goods_type.p_id
        FROM
            t_purchase_list_goods
        LEFT JOIN t_goods_type ON t_purchase_list_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="purchaseListId != null">
                AND t_purchase_list_goods.purchase_list_id = #{purchaseListId}
            </if>
            <if test="goodsTypeId != null and goodsTypeId != 1">
                AND
                (
                t_purchase_list_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
            <if test="codeOrName != null and codeOrName != ''">
                AND
                (
                t_purchase_list_goods.goods_name LIKE CONCAT('%', #{codeOrName} ,'%') OR
                t_purchase_list_goods.goods_code LIKE CONCAT('%', #{codeOrName} ,'%')
                )
            </if>
        </where>
    </select>

    <select id="getByPurchaseNumber" resultMap="BaseResultMap">
        SELECT *
        FROM t_purchase_list
        WHERE purchase_number = #{purchaseNumber}
    </select>

    <select id="queryPurchaseListGoods" resultMap="BaseResultMap02">
        SELECT *
        FROM t_purchase_list_goods
        WHERE purchase_list_id = #{purchaseListId}
          and goods_id = #{goodsId}
    </select>

</mapper>
